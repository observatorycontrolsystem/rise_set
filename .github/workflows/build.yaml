name: Build

on:
  # Run this workflow for pushes on all branches
  push:
    branches:
      - '**'
  # Run this workflow when a tag or branch is created
  create:
  # Run this workflow for pull requests
  pull_request:

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: 'ubuntu-22.04'
            python-version: '3.8'
          - os: 'ubuntu-22.04'
            python-version: '3.9'
          - os: 'ubuntu-22.04'
            python-version: '3.10'
          - os: 'ubuntu-22.04'
            python-version: '3.11'
          - os: 'ubuntu-22.04'
            python-version: '3.12'
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        pip install coveralls
        poetry install
    - name: Run tests
      run: |
        poetry run coverage run -m pytest
        poetry run coverage xml
    - name: Coveralls report
      uses: coverallsapp/github-action@v2
      with:
        parallel: true

  publish_to_pypi:
    # Only run this job if the run_tests job has succeeded, and if
    # this workflow was triggered by the creation of a new tag
    needs: run_tests
    if: github.event_name == 'create' && github.event.ref_type == 'tag' && github.event.repository.fork == false
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
    - name: Build package and publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_RISE_SET_API_TOKEN }}
      run: |
        poetry build
        poetry publish
